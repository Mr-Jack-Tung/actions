name: Core Tests

on:
  push:
    paths:
      - "core/**"
      - ".github/workflows/tests_core.yml"
  pull_request:
    branches:
      - "master"
    paths:
      - "core/**"
      - ".github/workflows/tests_core.yml"

defaults:
  run:
    working-directory: './core'

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        name: [
          "ubuntu-py310",
          "windows-py310",
        ]

        include:
          - name: "ubuntu-py310"
            python: "3.10"
            os: ubuntu-latest
            PATH_SEPARATOR: ":"
          - name: "windows-py310"
            python: "3.10"
            os: windows-latest
            PATH_SEPARATOR: ";"


    steps:
    - name: Checkout repository and submodules
      uses: actions/checkout@v2
      
    - name: Clone the robocorp-logging repository so that we can use it in the core tests.
      uses: actions/checkout@v2
      with:
        repository: robocorp/robocorp-logging
        path: robocorp-logging
        ref: ${{ github.ref }}
    
    
    # Setup to use the dev version of robocorp-logging.    
    - name: Setup node
      uses: actions/setup-node@v1
      with:
        node-version: 16.x
    - name: Print robocorp-logging info and build the output view.
      env:
        PYTHONPATH: ./core/src${{ matrix.PATH_SEPARATOR }}../robocorp-logging/src
      run: |
        python -c "import sys;print(sys.path)"
        python -c "import robocorp_logging;print(robocorp_logging.__file__)"
        cd ../robocorp-logging
        pip install fire
        python -m dev build-output-view
    
    
    # Use poetry
    - name: Install poetry
      run: pipx install poetry

    - name: Set up Python ${{ matrix.python }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python }}
        cache: 'poetry'

    - name: Install project
      run: poetry install

    - name: Test
      env:
        PYTHONPATH: ./core/src${{ matrix.PATH_SEPARATOR }}../robocorp-logging/src
      run: poetry run pytest -rfE -vv tests/robo_tests

